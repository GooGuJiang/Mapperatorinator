# Docker Compose for CPU-only deployment
version: '3.8'

services:
  mapperatorinator-api:
    build:
      context: .
      dockerfile: Dockerfile.cpu
    container_name: mapperatorinator_api_cpu
    ports:
      - "8000:8000"
    volumes:
      # 挂载项目代码
      - .:/workspace/Mapperatorinator
      # 挂载数据目录
      - ./audio_storage:/workspace/Mapperatorinator/audio_storage
      - ./outputs:/workspace/Mapperatorinator/outputs
      - ./logs:/workspace/Mapperatorinator/logs
      # 如果有外部数据集目录，可以取消注释
      # - ../datasets:/workspace/datasets
    environment:
      - PROJECT_PATH=/workspace/Mapperatorinator
      - PYTHONPATH=/workspace/Mapperatorinator
      # 如果需要wandb，可以设置API key
      # - WANDB_API_KEY=${WANDB_API_KEY}
      # CPU相关环境变量
      - OMP_NUM_THREADS=4
      - MKL_NUM_THREADS=4
      - TORCH_NUM_THREADS=4
    restart: unless-stopped
    shm_size: 2gb
    # 可选：资源限制
    deploy:
      resources:
        limits:
          memory: 8G
        reservations:
          memory: 4G
    # 健康检查
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    # 网络配置
    networks:
      - mapperatorinator-net

  # 可选：添加nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: mapperatorinator_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./progress_monitor.html:/usr/share/nginx/html/index.html:ro
      - ./static:/usr/share/nginx/html/static:ro
    depends_on:
      - mapperatorinator-api
    restart: unless-stopped
    networks:
      - mapperatorinator-net

networks:
  mapperatorinator-net:
    driver: bridge

volumes:
  audio_storage:
  outputs:
  logs:
